on:
  workflow_call:
    inputs:
      workspace_name:
        description: 'The terraform workspace to target for environment actions'
        required: true
        type: string
      environment_path:
        description: 'The path part for environment actions, it will be prefixed with terraform/environment/'
        required: true
        type: string
    outputs:
      terraform_workspace_name:
        description: "Name of Terraform workspace"
        value: ${{ jobs.terraform_environment_workflow.outputs.terraform_workspace_name }}
      url:
        description: "URL for environment"
        value: ${{ jobs.terraform_environment_workflow.outputs.url }}
    secrets:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      ssh_deploy_key:
        description: 'SSH Deploy Key used to access private repositories'
        required: true
jobs:
  terraform_environment_workflow:
    runs-on: ubuntu-latest
    outputs:
      terraform_workspace_name: ${{ steps.terraform_outputs.outputs.workspace_name }}
      url: ${{ steps.terraform_outputs.outputs.url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6
          terraform_wrapper: false
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 3599
          role-session-name: OPGWeblateTerraformGithubAction
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.ssh_deploy_key }}

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: ./terraform/environment
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./terraform/environment

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
        run: |
          terraform workspace show
          terraform plan -lock-timeout=300s -input=false -parallelism=30
        working-directory: ./terraform/environment/${{ inputs.environment_path }}

      - name: Terraform Apply
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/environment/${{ inputs.environment_path }}

      # - name: Terraform Outputs
      #   id: terraform_outputs
      #   env:
      #     TF_WORKSPACE: ${{ inputs.workspace_name }}
      #     TF_VAR_container_version: ${{ inputs.version_tag }}
      #   run: |
      #     echo "workspace_name=$(terraform output -raw workspace_name)" >> $GITHUB_OUTPUT
      #     echo "url=$(terraform output -raw app_fqdn)" >> $GITHUB_OUTPUT
      #   working-directory: ./terraform/environment
